name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '44 13 * * *'
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
  HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Lint the Dockerfile
      - name: Dockerfile Lint (Hadolint)
        uses: jbergstroem/hadolint-gh-action@v1
        with:
          dockerfile: Dockerfile
          error_level: 1 # Fail on WARNING or above (e.g., -1: never, 0: error, 1: warning, 2: info)

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
        with:
          cosign-release: 'v1.11.0'


      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Login to Heroku CLI
        id: heroku-login
        run: heroku container:login

      - name: Tag and Push image to Heroku
        id: heroku-push
        run: |
            docker tag {{ steps.build-and-push.outputs.imageid }} registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
            docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
        
      - name: Release the App on Heroku
        id: heroku-release
        run: heroku container:release web


#      - name: Build, Push and Release a Docker container to Heroku.
#        uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
#        with:
#          # Below you must provide variables for your Heroku app.
#
#          # The email address associated with your Heroku account.
#          # If you don't want to use repository secrets (which is recommended) you can do:
#          # email: my.email@example.com
#          email: ${{ secrets.HEROKU_EMAIL }}
#
#          # Heroku API key associated with provided user's email.
#          # Api Key is available under your Heroku account settings.
#          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
#
#          # Name of the heroku application to which the build is to be sent.
#          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
#
#          # (Optional, default: "web")
#          # Select the process type for which you want the docker container to be uploaded.
#          # By default, this argument is set to "web".
#          # For more information look at https://devcenter.heroku.com/articles/process-model
#          process_type: web
        

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
#      - name: Sign the published Docker image
#        if: ${{ github.event_name != 'pull_request' }}
#        env:
#          COSIGN_EXPERIMENTAL: "true"
#        # This step uses the identity token to provision an ephemeral certificate
#        # against the sigstore community Fulcio instance.
#        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
#        with:
#          private-repository: true
